name: Rust CI/CD

on:
  push:
    branches:
      - main
      - 'release/*'  # Trigger on release branches
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          override-with: rustup

      - name: Install dependencies
        run: cargo build --release

      - name: Run tests
        run: cargo test

      - name: Build the CLI
        run: cargo build --release

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cli-artifact
          path: target/release/dtc  # Replace with your executable name

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Only run on main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          override-with: rustup

      - name: Build the CLI
        run: cargo build --release

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0  # You can use a dynamic versioning strategy here
          release_name: Release v1.0.0
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0  # Same as above
          asset_path: target/release/dtc  # Replace with your executable name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}